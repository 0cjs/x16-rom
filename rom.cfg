MEMORY {
	# BASIC
	ZPBASIC:  start = $0000, size = $0090;
	STRTMP:   start = $00FF, size = $0002;
	BVECTORS: start = $0300, size = $0013;

	# KERNAL
	ZPKERNAL: start = $0090, size = $0070;
	STACK:    start = $0100, size = $0100;
	KVAR:     start = $0200, size = $0100;
	KVECTORS: start = $0314, size = $005D;
	KERNRAM:  start = $0371, size = $008F;

	# UTIL
	L0220:   start = $0220, size = $0060;

	# ROM C000-DFFF
	LOBASIC: start = $C000, size = $2000, fill=yes, fillval=$AA;

	# ROM E000-FFFF
	HIBASIC: start = $E000, size = $0580, fill=yes, fillval=$AA;

	KERNAL:  start = $E580, size = $1980, fill=yes, fillval=$AA;

	JMPTBL2: start = $FF00, size = $0047, fill=yes, fillval=$AA;
	JMPTB128:start = $FF47, size = $0039, fill=yes, fillval=$AA;
	JMPTBL:  start = $FF80, size = $007A, fill=yes, fillval=$AA;
	VECTORS: start = $FFFA, size = $0006, fill=yes, fillval=$AA;

    UTIL:    start = $C000, size = $2000, fill=yes, fillval=$AA;
}

SEGMENTS {
	ZPBASIC:  load = ZPBASIC,  type = zp;
	STRTMP:   load = STRTMP,   type = zp;
	BVECTORS: load = BVECTORS, type = bss;

	ZPKERNAL: load = ZPKERNAL, type = zp;
	STACK:    load = STACK,    type = bss;
	KVAR:     load = KVAR,     type = bss;
	KVECTORS: load = KVECTORS, type = bss;

	LOBASIC:  load = LOBASIC,  type = ro;
	HIBASIC:  load = HIBASIC,  type = ro;

	EDITOR:   load = KERNAL,   type = ro;
	SERIAL:   load = KERNAL,   type = ro;
	RS232:    load = KERNAL,   type = ro;
	MESSAGES: load = KERNAL,   type = ro;
	CHANNEL:  load = KERNAL,   type = ro;
	TIME:     load = KERNAL,   type = ro;
	ERROR:    load = KERNAL,   type = ro;
	INIT:     load = KERNAL,   type = ro;
	RS232NMI: load = KERNAL,   type = ro;
	IRQFILE:  load = KERNAL,   type = ro;
	ROUTINES: load = KERNAL,   type = ro;
    KERNRAM:  load = KERNAL,   run = KERNRAM, type = ro, define = yes;
	JMPTBL2:  load = JMPTBL2,  type = ro;
	JMPTB128: load = JMPTB128, type = ro;
	JMPTBL:   load = JMPTBL,   type = ro;
	VECTORS:  load = VECTORS,  type = ro;

	# UTIL
	monitor_a:         load = UTIL, type = ro;
    monitor_b:         load = UTIL, type = ro;
    asmchars1:         load = UTIL, type = ro, define = yes;
    asmchars2:         load = UTIL, type = ro, define = yes;
    mnemos1:           load = UTIL, type = ro, define = yes;
    mnemos2:           load = UTIL, type = ro, define = yes;
    monitor_c:         load = UTIL, type = ro;
    monitor_ram_code:  load = UTIL, run = L0220, type = ro, define = yes;

}
