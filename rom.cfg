MEMORY {
	S0000b: start = $0000, size = $0100;
	S0000k: start = $0000, size = $0100;
	S0002:  start = $0002, size = $00FE;
	S0090:  start = $0090, size = $0070;
	S00FF:  start = $00FF, size = $0002;
	S0100:  start = $0100, size = $0100;
	S0200:  start = $0200, size = $0100;
	S0300b: start = $0300, size = $0100;
	S0300k: start = $0300, size = $0100;
	S0314b: start = $0314, size = $0100;
	S0314k: start = $0314, size = $0100;
	S033C:  start = $033C, size = $0100;
	S0400:  start = $0400, size = $0400;
	SD000:  start = $D000, size = $0400;
	SD400:  start = $D400, size = $0400;
	SD800:  start = $D800, size = $0400;
	SDC00:  start = $DC00, size = $0100;
	SDD00:  start = $DD00, size = $0100;

	SA000:  start = $A000, size = $2000, fill=yes, fillval=$AA, file="basic.bin";
	SE000:  start = $E000, size = $04D3, fill=yes, fillval=$AA, file="kernal.bin";
	SE4D3:  start = $E4D3, size = $0007, fill=yes, fillval=$AA, file="kernal.bin";
	SE4DA:  start = $E4DA, size = $0006, fill=yes, fillval=$AA, file="kernal.bin";
	SE4E0:  start = $E4E0, size = $000C, fill=yes, fillval=$AA, file="kernal.bin";
	SE4EC:  start = $E4EC, size = $0014, fill=yes, fillval=$AA, file="kernal.bin";
	SE500:  start = $E500, size = $1A81, fill=yes, fillval=$AA, file="kernal.bin";
	SFF81:  start = $FF81, size = $0009, fill=yes, fillval=$AA, file="kernal.bin";
	SFF8A:  start = $FF8A, size = $0006, fill=yes, fillval=$AA, file="kernal.bin";
	SFF90:  start = $FF90, size = $006A, fill=yes, fillval=$AA, file="kernal.bin";
	SFFFA:  start = $FFFA, size = $0006, fill=yes, fillval=$AA, file="kernal.bin";
}

SEGMENTS {
	S0000b: load = S0000b, type = zp;
	S0000k: load = S0000k, type = zp;
	S0002:  load = S0002,  type = zp;
	S0090:  load = S0090,  type = zp;
	S00FF:  load = S00FF,  type = zp;
	S0100:  load = S0100,  type = zp;
	S0200:  load = S0200,  type = zp;
	S0300b: load = S0300b,  type = zp;
	S0300k: load = S0300k,  type = zp;
	S0314b: load = S0314b,  type = zp;
	S0314k: load = S0314k,  type = zp;
	S033C:  load = S033C,  type = zp;
	S0400:  load = S0400,  type = zp;
	SD000:  load = SD000,  type = zp;
	SD400:  load = SD400,  type = zp;
	SD800:  load = SD800,  type = zp;
	SDC00:  load = SDC00,  type = zp;
	SDD00:  load = SDD00,  type = zp;

	SA000:  load = SA000,     type = ro;
	SE000:  load = SE000,     type = ro;
	SE4D3:  load = SE4D3,     type = ro;
	SE4DA:  load = SE4DA,     type = ro;
	SE4E0:  load = SE4E0,     type = ro;
	SE4EC:  load = SE4EC,     type = ro;
	SE500:  load = SE500,     type = ro;
	SFF81:  load = SFF81,     type = ro;
	SFF8A:  load = SFF8A,     type = ro;
	SFF90:  load = SFF90,     type = ro;
	SFFFA:  load = SFFFA,     type = ro;
}
